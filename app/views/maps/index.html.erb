<div class = "map_index_page">
  <div class = "map_index_title">
    <%= image_tag "https://icooon-mono.com/i/icon_10988/icon_109881_64.png", class: "map_index_logo" %>
    <h3>家系検索</h3>
  </div>
  <div class="map_index_form">
    <input type="text" id="addressInput" value="" placeholder="駅名・地名等を入力">
    <input type="hidden" id="keywordInput" value="家系ラーメン">
    <input type="button" value="検索" style="color:white; background-color:#6699FF;"onclick="getPlaces();">  
    <div class="map_index_range">
      <p>検索範囲：</p>
      <select id="radiusInput">
        <option value="200" selected>200 m</option>
        <option value="500">500 m</option>
        <option value="800">800 m</option>
        <option value="1000">1 km</option>
        <option value="1500">1.5 km</option>
      <select>
    </div>
  </div>

  <div id="mapArea"></div>
  <div id="results"></div>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCHH73WeY-N5ysvBjmsHTtCAoa-mRRkcys&libraries=places&callback=initMap" async defer></script>
<script type="text/javascript">
var placesList;

function initMap() {
  new google.maps.Map(document.getElementById("mapArea"), {
    zoom: 12,
    center: new google.maps.LatLng(35.6809591,139.7673068),
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });
}
  
function getPlaces(){  
  document.getElementById("results").innerHTML = "";
  placesList = new Array();
  
  var addressInput = document.getElementById("addressInput").value;
  if (addressInput == "") {
    return;
  }

  var geocoder = new google.maps.Geocoder();
  geocoder.geocode(
    {
      address: addressInput
    },
    function(results, status) {
      if (status == google.maps.GeocoderStatus.OK) {
        startNearbySearch(results[0].geometry.location);
      }
      else {
        alert(addressInput + "：位置情報が取得できませんでした。");
      }
    });
}

function startNearbySearch(latLng){
  document.getElementById("results").innerHTML = "検索中...";
  
  var map = new google.maps.Map(
    document.getElementById("mapArea"),
    {
      zoom: 12,
      center: latLng,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    }
  );
  
  var service = new google.maps.places.PlacesService(map);
  
  var keywordInput = document.getElementById("keywordInput").value;
  var obj = document.getElementById("radiusInput");
  var radiusInput = Number(obj.options[obj.selectedIndex].value);
  
  service.nearbySearch(
    {
      location: latLng,
      radius: radiusInput,
      type: ['restaurant'],
      keyword: keywordInput,
      language: 'ja'
    },
    displayResults
  );
  var circle = new google.maps.Circle(
    {
      map: map,
      center: latLng,
      radius: radiusInput,
      fillColor: '#ff0000',
      fillOpacity: 0.3,
      strokeColor: '#ff0000',
      strokeOpacity: 0.5,
      strokeWeight: 1
    }
  );  
}

function displayResults(results, status, pagination) {
    
  if(status == google.maps.places.PlacesServiceStatus.OK) {  
    placesList = placesList.concat(results);
    if (pagination.hasNextPage) {
      setTimeout(pagination.nextPage(), 1000);
    } else {

      for (var i = 0; i < placesList.length; i++) {
        if(placesList[i].rating == undefined){
          placesList[i].rating = -1;
        }
      }
      
      placesList.sort(function(a,b){
        if(a.rating > b.rating) return -1;
        if(a.rating < b.rating) return 1;
        return 0;
      });
      
      var resultHTML = "<ol>";
      
      for (var i = 0; i < placesList.length; i++) {
        place = placesList[i];
        
        var rating = place.rating;
        if(rating == undefined) rating = "---";
        
        var content = "【★" + rating + "】 " + place.name;
        
        resultHTML += "<li>";
        resultHTML += "<a href=\"javascript: void(0);\"";
        resultHTML += " onclick=\"createMarker(";
        resultHTML += "'" + place.name + "',";
        resultHTML += "'" + place.vicinity + "',";
        resultHTML += place.geometry.location.lat() + ",";
        resultHTML += place.geometry.location.lng() + ")\">";
        resultHTML += content;
        resultHTML += "</a>";
        resultHTML += "</li>";
      }
      
      resultHTML += "</ol>";
      
      //結果表示
      document.getElementById("results").innerHTML = resultHTML;
    }
  
  } else {
    //エラー表示
    var results = document.getElementById("results");
    if(status == google.maps.places.PlacesServiceStatus.ZERO_RESULTS) {
      results.innerHTML = "お近くに家系はありませんでした";
    } else if(status == google.maps.places.PlacesServiceStatus.ERROR) {
      results.innerHTML = "サーバ接続に失敗しました";
    } else if(status == google.maps.places.PlacesServiceStatus.INVALID_REQUEST) {
      results.innerHTML = "リクエストが無効です";
    } else if(status == google.maps.places.PlacesServiceStatus.OVER_QUERY_LIMIT) {
      results.innerHTML = "リクエストの利用制限回数を超えました";
    } else if(status == google.maps.places.PlacesServiceStatus.REQUEST_DENIED) {
      results.innerHTML = "サービスが使えない状態でした";
    } else if(status == google.maps.places.PlacesServiceStatus.UNKNOWN_ERROR) {
      results.innerHTML = "原因不明のエラーが発生しました";
    }

  }
}

function createMarker(name, vicinity, lat, lng){
  
  var map = new google.maps.Map(document.getElementById("mapArea"), {
    zoom: 15,
    center: new google.maps.LatLng(lat, lng),
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });
  
  var marker = new google.maps.Marker({
    map: map,
    position: new google.maps.LatLng(lat, lng)
  });
  
  var info = "<div style=\"min-width: 100px\">";
  info += name + "<br />";
  info += vicinity + "<br />";
  info += "<a href=\"https://maps.google.co.jp/maps?q=" + encodeURIComponent(name + " " + vicinity) + "&z=15&iwloc=A\"";
  info += " target=\"_blank\">→店舗情報</a><br />";
  info += "<a href=\"https://www.google.com/maps/dir/?api=1&destination=" + lat + "," + lng + "\"";
  info += " target=\"_blank\">→ここへ行く</a>";
  info += "</div>";
  
  var infoWindow = new google.maps.InfoWindow({
    content: info
  });
  infoWindow.open(map, marker);
  
  marker.addListener("click", function(){
    infoWindow.open(map, marker);
  });
}
  </script>
</div>
